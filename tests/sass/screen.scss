@import "compass/reset";
@import "compass/css3/font-face";
@import "settings";

@mixin set-color($color) {
    color: $color;
    background-color: $color;
}

@mixin circle($width) {
    width: $width;
    height: $width;
    -webkit-border-radius: $width / 2;
    -moz-border-radius: $width / 2;
    border-radius: $width / 2;
}

@include font-face("Ubuntu Mono", font-files("UbuntuMono-R.ttf"));
@include font-face("Quicksand", font-files("Quicksand-Regular.otf"));


@media screen and (max-width: $break-mobland - 1) and (min-width: $break-mobport) {
    .centerer {
        width: $break-mobport;
    }
}

@media screen and (max-width: $break-tablet - 1) and (min-width: $break-mobland) {
    .centerer {
        width: $break-mobland;
    }
}

@media screen and (max-width: $break-desktop - 1) and (min-width: $break-tablet) {
    .centerer {
        width: $break-tablet;
    }
}

@media screen and (max-width: $break-hires - 1) and (min-width: $break-desktop) {
    .centerer {
        width: $break-desktop;
    }
}

@media screen and (min-width: $break-hires) {
    .centerer {
        width: $break-hires;
    }
}

@each $color, $hex in $color-scheme {
    .#{"" + $color} {
        @include set-color($hex);
    }
}

html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    min-height: 100%;
}

html {
    position: relative;
}

.overlay {
    position: absolute;
}

.centerer {
    display: inline-block;
}

body {
	margin: 0 0 $banner-height;
    font-family: $default-font;
    font-size: $default-font-size;
    text-align: center;
    background-color: map-get($color-scheme, white);
    color: map-get($color-scheme, dark-grey);
}

body > * {
    text-align: left;
}

a {
    text-decoration: none;
    color: map-get($color-scheme, dark-grey);
}

code {
	font-family: $code-font;
}
.iconButtons {
	width: $icon-size;
	height: $icon-size;
	display: inline-block;
}
.actionButtons {
    @extend .iconButtons;
    cursor: pointer;
}
.menu {
    width: 100%;
    height: $banner-height;
    text-align: center;
    background-color: map-get($color-scheme, light-grey);
    .menuItem {
        padding-left: $icon-size / 2;
        padding-right: $icon-size / 2;
        display: inline-block;
    }
    .menuIcon {
        @extend .menuItem;
        height: $icon-size;
        width: $icon-size;
        display: inline-block;
    }
}

.menuLeft {
    text-align: left;
    float: left;
}

.menuRight {
    text-align: right;
    float: right;
}

.banner.menu {
    font-size: 0;
    .halfMenu {
        display: inline-block;
        width: 50%;
    }
    .menuLeft {
        display: inline-block;
        width: 60%;
    }
    .menuRight {
        display: inline-block;
        width: 40%;
        #bannerSearch {
            width: $banner-height * 3.75;
            height: $banner-height / 2;
            border: none;
            margin-right: 24px;
        }
    }
    .menuItem {
        height: $icon-size;
        padding-top: $banner-height / 4;
        padding-bottom: $banner-height / 4;
        input {
            vertical-align: bottom;
        }
    }
}

.centerer.body {
    margin-top: $top-margin;
    margin-bottom: $bottom-margin;
    padding-left: $icon-size / 2;
}

footer {
	position: absolute;
    left: 0;
    bottom: 0;
    height: $banner-height;
    width: 100%;
    .menu {
        font-size: $default-font-size;
        %footerMenu {
            display: inline-block;
        }
        %textMenu {
            @extend %footerMenu;
            a {
                padding-top: ($banner-height - $default-font-size) / 2;
                padding-bottom: ($banner-height - $default-font-size) / 2;
                display: block;
            }
        }
        .menuLeft {
            @extend %textMenu;
            width: 45%;
        }
        .logoContainer {
            @extend %footerMenu;
            padding-top: $banner-height / 4;
            padding-bottom: $banner-height / 4;
            width: 5%;
        }
        .menuRight {
            @extend %textMenu;
            width: 45%;
        }
    }
}

.aside {
    width: 30%;
    float: right;
    display: inline-block;
}

.main {
    width: 70%;
    display: inline-block;
    float: left;
    
}

.legend {
    padding-left: $aside-circle-size;
    padding-top: $question-height / 2;
    li {
        line-height: $aside-circle-size;
        margin: $aside-circle-size / 2 0;
        .asideCircle {
            @include circle($aside-circle-size);
            display: inline-block;
            margin-right: $aside-circle-size / 2;
        }
        .asideText {
            display: inline-block;
            vertical-align: top;
        }
    }
}

.questionListItem {
    border-color: map-get($color-scheme, light-grey);
    &.outdated {
        border-color: map-get($color-scheme, red);
    }
    &.edited {
        border-color: map-get($color-scheme, yellow);
    }
    &.new {
        border-color: map-get($color-scheme, green);
    }
    border-width: 3px;
    border-style: solid;
    height: $question-height - $question-gap;
    margin-bottom: $question-gap;
    .indent {
        text-align: center;
        width: $indent-width;
    }
    %questionAnswer {
        & > * {
            display: inline-block;
            height: 100%;
            vertical-align: top;
            padding-top: $question-inner-padding;
        }
    }
    .question {
        @extend %questionAnswer;
        height: $question-question-height;
        .questiontext {
            font-size: $list-title-font-size;
            font-weight: 700;
            width: calc(100% - #{$indent-width});
        }
    }
    .answerSnippet {
        @extend %questionAnswer;
        height: $question-answer-height;
        .version {
        	width: $version-width;
        	height: $version-height;
        	background-color: map-get($color-scheme, blue);
        	padding: 0;
        	margin-top: $question-inner-padding;
        	text-align: center;
        	line-height: $version-height;
        	color: map-get($color-scheme, light-grey);
        	font-weight: 700;
        }
        .answerText {
        	float: right;
            display: inline-block;
            width: calc(100% - #{$indent-width} - #{$version-width} - #{$version-padding});
            max-height: $default-font-size * $lines-to-display;
            overflow: hidden;
        }
    }
}

.qa {
    & > * {
        padding: $qa-padding;
    }
    .question {
        padding-top: $qa-question-padding-top;
        padding-left: $qa-question-padding-left;
        h2 {
            font-size: $main-title-font-size;
            font-weight: 700;
        }
    }
    .answer {
        padding-top: 0;
        line-height: $qa-answer-line-height;
        padding-left: $qa-answer-padding-left;
        li {
            list-style: disc;
            list-style-position: inside;
        }
        .answerbox {
            position: relative;
            .editButton {
                position: absolute;
                right: 0;
                top: 0;
            }
            #epictext {
                display: none;
            }
            .editBox {
                width: calc(100% - (4 * #{$icon-size}));
                display: inline-block;
            }
        }
    }
}

.favoriteButtons {
    float: left;
    width: $icon-size;
    padding-left: $qa-question-padding-left;
    padding-right: $icon-size;
}